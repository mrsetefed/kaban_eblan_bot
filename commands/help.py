HELP_TEXT_COMMON = (
    "*Дарова! И так, начнем с самого важного — нахуя нужен этот бот?*\n\n"
    "Ну во первых не пизди так про него, это мой сын вообще-то. Но все же, что он умеет и нахуя нужен? Его основная функция — делать для нас график игр, но перед тем как я расскажу про это подробней важный момент:\n\n"
    "> *Из-за особенностей хостинга бот иногда \"засыпает\" и дает ответ только через ~минуту. Это НОРМАЛЬНО и никак не пофиксить. Если не отвечает дольше 5 минут, то тогда уже можно написать мне, что он упал.*\n\n"
    "*И все же, как его делать?*\n\n"
    "Не сложно. Для этого впиши команду /upd, после чего укажи месяц-даты, которые хочешь поменять/добавить и через пробел проставь, что ты хочешь в этот день: + если можешь играть, - если нет. Команды можно смешивать, указывая каждую через запятую.\n\n"
    "*Пример:*\n"
    "```\n"
    "/upd 8-1 +, 8-4 +, 8-7 +, 8-19 -, 8-21 -\n"
    "```\n"
    "Такая команда добавит в твой график, что ты можешь играть 1го, 4го и 7го августа, а 19 и 21 ты будешь занят.\n\n"
    "А еще ты можешь заполнить целый месяц сразу, а потом указать отдельно даты когда ты занят, это делается вот так:\n"
    "```\n"
    "/upd 8 +\n"
    "```\n"
    "Это заполнит, что у тебя свободен весь август целиком.\n\n"
    "Инфа обновляется в реальном времени, максимум пара минут задержки, поэтому если сначала мог, а потом поменялись планы — ничего страшного, просто обнови еще раз.\n\n"

)

HELP_TEXT_VLAS = (
    "Но тебя все выше вряд ли ебет, мне просто лень разделять это дело да и мало ли важно будет. Для тебя роляют только эти команды:\n"
    "```\n"
    "/today — че там сегодня, соот-но\n"
    "/tomorrow — шо по завтра\n"
    "/week — что по всей этой недели\n"
    "```\n\n"
    "График я обновляю постоянно +, так что должен быть актуальный. День \"обновляется\" у него в 7 утра по твоим."
)

async def help(update, context):
    user_id = str(update.effective_user.id)
    from utils import get_user_role  # если не импортирован заранее

    roles = get_user_role(user_id)
    # Общий текст
    await update.message.reply_text(HELP_TEXT_COMMON, parse_mode="Markdown")
    # Отдельно для vlas
    if roles and ("vlas" in [r.lower() for r in (roles if isinstance(roles, list) else [roles])]):
        await update.message.reply_text(HELP_TEXT_VLAS, parse_mode="Markdown")