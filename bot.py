import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from aiohttp import web

TOKEN = os.environ["BOT_TOKEN"]
PORT = int(os.environ.get("PORT", 8080))
WEBHOOK_PATH = "/"  # –ø—É—Ç—å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π Telegram —à–ª—ë—Ç –∑–∞–ø—Ä–æ—Å—ã

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()

# –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û—Ç—ä–µ–±–∏—Å—å.")

async def ping(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("pong")

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("ping", ping))

# –°–æ–∑–¥–∞—ë–º aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
aio_app = web.Application()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º webhook handler ‚Äî —Ç–æ–ª—å–∫–æ –ü–û–°–õ–ï –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏!
async def handle(request):
    data = await request.json()
    update = Update.de_json(data, app.bot)
    await app.process_update(update)
    return web.Response(text="OK")

aio_app.add_routes([web.post(WEBHOOK_PATH, handle)])

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ
async def on_startup(app_: web.Application):
    await app.initialize()  # üîß –í–ê–ñ–ù–û: –≤—Ä—É—á–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    webhook_url = f"https://kaban-eblan-bot.onrender.com{WEBHOOK_PATH}"
    await app.bot.set_webhook(webhook_url)
    print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")

aio_app.on_startup.append(on_startup)

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫...")
    web.run_app(aio_app, port=PORT)