import os
import sys
import asyncio

from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
try:
    TOKEN = os.environ["BOT_TOKEN"]
except KeyError:
    print("‚ùå BOT_TOKEN not found in environment variables", file=sys.stderr)
    sys.exit(1)

# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
MY_SCHEDULE = """
üóì –ú–æ–π –≥—Ä–∞—Ñ–∏–∫:

–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ ‚Äî 12:00‚Äì20:00  
–í—Ç–æ—Ä–Ω–∏–∫ ‚Äî –≤—ã—Ö–æ–¥–Ω–æ–π  
–°—Ä–µ–¥–∞ ‚Äî 8:00‚Äì16:00  
–ß–µ—Ç–≤–µ—Ä–≥ ‚Äî 12:00‚Äì20:00  
–ü—è—Ç–Ω–∏—Ü–∞ ‚Äî 12:00‚Äì18:00  
–°—É–±–±–æ—Ç–∞ ‚Äî –ø–æ –∑–∞–ø–∏—Å–∏  
–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ ‚Äî –≤—ã—Ö–æ–¥–Ω–æ–π
"""

# –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û—Ç—ä–µ–±–∏—Å—å.")

async def schedule(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(MY_SCHEDULE)

async def ping(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("pong")

# -------------------------------
# üí° –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
# -------------------------------
from aiohttp import web

async def handle(request):
    return web.Response(text="Bot is alive")

async def run_web_server():
    app = web.Application()
    app.router.add_get("/", handle)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", int(os.environ.get("PORT", 8080)))
    await site.start()
# -------------------------------

# –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("schedule", schedule))
    app.add_handler(CommandHandler("ping", ping))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å—ë –≤ –æ–¥–Ω–æ–º asyncio loop
    async def main():
        # –°—Ç–∞—Ä—Ç—É–µ–º —Ñ–µ–π–∫–æ–≤—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä
        await run_web_server()
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await app.initialize()
        await app.start()
        await app.updater.start_polling()
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (polling + —Ñ–µ–π–∫–æ–≤—ã–π HTTP)!")

    asyncio.run(main())