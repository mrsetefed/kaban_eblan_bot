import os
import sys
import asyncio
from aiohttp import web
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
try:
    TOKEN = os.environ["BOT_TOKEN"]
except KeyError:
    print("‚ùå BOT_TOKEN not found", file=sys.stderr)
    sys.exit(1)

# –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û—Ç—ä–µ–±–∏—Å—å.")

async def ping(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("pong")

# –§–µ–π–∫–æ–≤—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
async def keep_alive():
    async def handler(_):
        return web.Response(text="OK")
    app = web.Application()
    app.router.add_get("/", handler)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, port=8080)
    await site.start()

# –ó–∞–ø—É—Å–∫
async def main():
    await keep_alive()  # –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("ping", ping))
    print("üöÄ Bot is running...")
    await app.run_polling()

if __name__ == '__main__':
    asyncio.run(main())